module.exports = {
        typeDefs: // Code generated by Prisma (prisma@1.34.10). DO NOT EDIT.
  // Please don't change this file manually but run `prisma generate` to update it.
  // For more information, please read the docs: https://www.prisma.io/docs/prisma-client/

/* GraphQL */ `type AggregateCustomIngredient {
  count: Int!
}

type AggregateCustomRecipe {
  count: Int!
}

type AggregateDailyRecord {
  count: Int!
}

type AggregateIngredientList {
  count: Int!
}

type AggregateProfile {
  count: Int!
}

type AggregateUser {
  count: Int!
}

type BatchPayload {
  count: Long!
}

type CustomIngredient {
  id: ID!
  user_id: String!
  name: String!
  description: String!
  fat: Int!
  carbs: Int!
  protein: Int!
  fiber: Int!
  calories: Int!
  user: User!
  updatedAt: DateTime!
  createdAt: DateTime!
}

type CustomIngredientConnection {
  pageInfo: PageInfo!
  edges: [CustomIngredientEdge]!
  aggregate: AggregateCustomIngredient!
}

input CustomIngredientCreateInput {
  id: ID
  user_id: String!
  name: String!
  description: String!
  fat: Int!
  carbs: Int!
  protein: Int!
  fiber: Int!
  calories: Int!
  user: UserCreateOneWithoutCustom_ingredientsInput!
}

input CustomIngredientCreateManyWithoutUserInput {
  create: [CustomIngredientCreateWithoutUserInput!]
  connect: [CustomIngredientWhereUniqueInput!]
}

input CustomIngredientCreateWithoutUserInput {
  id: ID
  user_id: String!
  name: String!
  description: String!
  fat: Int!
  carbs: Int!
  protein: Int!
  fiber: Int!
  calories: Int!
}

type CustomIngredientEdge {
  node: CustomIngredient!
  cursor: String!
}

enum CustomIngredientOrderByInput {
  id_ASC
  id_DESC
  user_id_ASC
  user_id_DESC
  name_ASC
  name_DESC
  description_ASC
  description_DESC
  fat_ASC
  fat_DESC
  carbs_ASC
  carbs_DESC
  protein_ASC
  protein_DESC
  fiber_ASC
  fiber_DESC
  calories_ASC
  calories_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type CustomIngredientPreviousValues {
  id: ID!
  user_id: String!
  name: String!
  description: String!
  fat: Int!
  carbs: Int!
  protein: Int!
  fiber: Int!
  calories: Int!
  updatedAt: DateTime!
  createdAt: DateTime!
}

input CustomIngredientScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  user_id: String
  user_id_not: String
  user_id_in: [String!]
  user_id_not_in: [String!]
  user_id_lt: String
  user_id_lte: String
  user_id_gt: String
  user_id_gte: String
  user_id_contains: String
  user_id_not_contains: String
  user_id_starts_with: String
  user_id_not_starts_with: String
  user_id_ends_with: String
  user_id_not_ends_with: String
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  description: String
  description_not: String
  description_in: [String!]
  description_not_in: [String!]
  description_lt: String
  description_lte: String
  description_gt: String
  description_gte: String
  description_contains: String
  description_not_contains: String
  description_starts_with: String
  description_not_starts_with: String
  description_ends_with: String
  description_not_ends_with: String
  fat: Int
  fat_not: Int
  fat_in: [Int!]
  fat_not_in: [Int!]
  fat_lt: Int
  fat_lte: Int
  fat_gt: Int
  fat_gte: Int
  carbs: Int
  carbs_not: Int
  carbs_in: [Int!]
  carbs_not_in: [Int!]
  carbs_lt: Int
  carbs_lte: Int
  carbs_gt: Int
  carbs_gte: Int
  protein: Int
  protein_not: Int
  protein_in: [Int!]
  protein_not_in: [Int!]
  protein_lt: Int
  protein_lte: Int
  protein_gt: Int
  protein_gte: Int
  fiber: Int
  fiber_not: Int
  fiber_in: [Int!]
  fiber_not_in: [Int!]
  fiber_lt: Int
  fiber_lte: Int
  fiber_gt: Int
  fiber_gte: Int
  calories: Int
  calories_not: Int
  calories_in: [Int!]
  calories_not_in: [Int!]
  calories_lt: Int
  calories_lte: Int
  calories_gt: Int
  calories_gte: Int
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  AND: [CustomIngredientScalarWhereInput!]
  OR: [CustomIngredientScalarWhereInput!]
  NOT: [CustomIngredientScalarWhereInput!]
}

type CustomIngredientSubscriptionPayload {
  mutation: MutationType!
  node: CustomIngredient
  updatedFields: [String!]
  previousValues: CustomIngredientPreviousValues
}

input CustomIngredientSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: CustomIngredientWhereInput
  AND: [CustomIngredientSubscriptionWhereInput!]
  OR: [CustomIngredientSubscriptionWhereInput!]
  NOT: [CustomIngredientSubscriptionWhereInput!]
}

input CustomIngredientUpdateInput {
  user_id: String
  name: String
  description: String
  fat: Int
  carbs: Int
  protein: Int
  fiber: Int
  calories: Int
  user: UserUpdateOneRequiredWithoutCustom_ingredientsInput
}

input CustomIngredientUpdateManyDataInput {
  user_id: String
  name: String
  description: String
  fat: Int
  carbs: Int
  protein: Int
  fiber: Int
  calories: Int
}

input CustomIngredientUpdateManyMutationInput {
  user_id: String
  name: String
  description: String
  fat: Int
  carbs: Int
  protein: Int
  fiber: Int
  calories: Int
}

input CustomIngredientUpdateManyWithoutUserInput {
  create: [CustomIngredientCreateWithoutUserInput!]
  delete: [CustomIngredientWhereUniqueInput!]
  connect: [CustomIngredientWhereUniqueInput!]
  set: [CustomIngredientWhereUniqueInput!]
  disconnect: [CustomIngredientWhereUniqueInput!]
  update: [CustomIngredientUpdateWithWhereUniqueWithoutUserInput!]
  upsert: [CustomIngredientUpsertWithWhereUniqueWithoutUserInput!]
  deleteMany: [CustomIngredientScalarWhereInput!]
  updateMany: [CustomIngredientUpdateManyWithWhereNestedInput!]
}

input CustomIngredientUpdateManyWithWhereNestedInput {
  where: CustomIngredientScalarWhereInput!
  data: CustomIngredientUpdateManyDataInput!
}

input CustomIngredientUpdateWithoutUserDataInput {
  user_id: String
  name: String
  description: String
  fat: Int
  carbs: Int
  protein: Int
  fiber: Int
  calories: Int
}

input CustomIngredientUpdateWithWhereUniqueWithoutUserInput {
  where: CustomIngredientWhereUniqueInput!
  data: CustomIngredientUpdateWithoutUserDataInput!
}

input CustomIngredientUpsertWithWhereUniqueWithoutUserInput {
  where: CustomIngredientWhereUniqueInput!
  update: CustomIngredientUpdateWithoutUserDataInput!
  create: CustomIngredientCreateWithoutUserInput!
}

input CustomIngredientWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  user_id: String
  user_id_not: String
  user_id_in: [String!]
  user_id_not_in: [String!]
  user_id_lt: String
  user_id_lte: String
  user_id_gt: String
  user_id_gte: String
  user_id_contains: String
  user_id_not_contains: String
  user_id_starts_with: String
  user_id_not_starts_with: String
  user_id_ends_with: String
  user_id_not_ends_with: String
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  description: String
  description_not: String
  description_in: [String!]
  description_not_in: [String!]
  description_lt: String
  description_lte: String
  description_gt: String
  description_gte: String
  description_contains: String
  description_not_contains: String
  description_starts_with: String
  description_not_starts_with: String
  description_ends_with: String
  description_not_ends_with: String
  fat: Int
  fat_not: Int
  fat_in: [Int!]
  fat_not_in: [Int!]
  fat_lt: Int
  fat_lte: Int
  fat_gt: Int
  fat_gte: Int
  carbs: Int
  carbs_not: Int
  carbs_in: [Int!]
  carbs_not_in: [Int!]
  carbs_lt: Int
  carbs_lte: Int
  carbs_gt: Int
  carbs_gte: Int
  protein: Int
  protein_not: Int
  protein_in: [Int!]
  protein_not_in: [Int!]
  protein_lt: Int
  protein_lte: Int
  protein_gt: Int
  protein_gte: Int
  fiber: Int
  fiber_not: Int
  fiber_in: [Int!]
  fiber_not_in: [Int!]
  fiber_lt: Int
  fiber_lte: Int
  fiber_gt: Int
  fiber_gte: Int
  calories: Int
  calories_not: Int
  calories_in: [Int!]
  calories_not_in: [Int!]
  calories_lt: Int
  calories_lte: Int
  calories_gt: Int
  calories_gte: Int
  user: UserWhereInput
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  AND: [CustomIngredientWhereInput!]
  OR: [CustomIngredientWhereInput!]
  NOT: [CustomIngredientWhereInput!]
}

input CustomIngredientWhereUniqueInput {
  id: ID
}

type CustomRecipe {
  id: ID!
  name: String!
  user_id: String!
  portions: Int!
  user: User!
  ingredient_list(where: IngredientListWhereInput, orderBy: IngredientListOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [IngredientList!]
  updatedAt: DateTime!
  createdAt: DateTime!
}

type CustomRecipeConnection {
  pageInfo: PageInfo!
  edges: [CustomRecipeEdge]!
  aggregate: AggregateCustomRecipe!
}

input CustomRecipeCreateInput {
  id: ID
  name: String!
  user_id: String!
  portions: Int!
  user: UserCreateOneWithoutCustom_recipesInput!
  ingredient_list: IngredientListCreateManyWithoutRecipeInput
}

input CustomRecipeCreateManyWithoutUserInput {
  create: [CustomRecipeCreateWithoutUserInput!]
  connect: [CustomRecipeWhereUniqueInput!]
}

input CustomRecipeCreateOneWithoutIngredient_listInput {
  create: CustomRecipeCreateWithoutIngredient_listInput
  connect: CustomRecipeWhereUniqueInput
}

input CustomRecipeCreateWithoutIngredient_listInput {
  id: ID
  name: String!
  user_id: String!
  portions: Int!
  user: UserCreateOneWithoutCustom_recipesInput!
}

input CustomRecipeCreateWithoutUserInput {
  id: ID
  name: String!
  user_id: String!
  portions: Int!
  ingredient_list: IngredientListCreateManyWithoutRecipeInput
}

type CustomRecipeEdge {
  node: CustomRecipe!
  cursor: String!
}

enum CustomRecipeOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  user_id_ASC
  user_id_DESC
  portions_ASC
  portions_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type CustomRecipePreviousValues {
  id: ID!
  name: String!
  user_id: String!
  portions: Int!
  updatedAt: DateTime!
  createdAt: DateTime!
}

input CustomRecipeScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  user_id: String
  user_id_not: String
  user_id_in: [String!]
  user_id_not_in: [String!]
  user_id_lt: String
  user_id_lte: String
  user_id_gt: String
  user_id_gte: String
  user_id_contains: String
  user_id_not_contains: String
  user_id_starts_with: String
  user_id_not_starts_with: String
  user_id_ends_with: String
  user_id_not_ends_with: String
  portions: Int
  portions_not: Int
  portions_in: [Int!]
  portions_not_in: [Int!]
  portions_lt: Int
  portions_lte: Int
  portions_gt: Int
  portions_gte: Int
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  AND: [CustomRecipeScalarWhereInput!]
  OR: [CustomRecipeScalarWhereInput!]
  NOT: [CustomRecipeScalarWhereInput!]
}

type CustomRecipeSubscriptionPayload {
  mutation: MutationType!
  node: CustomRecipe
  updatedFields: [String!]
  previousValues: CustomRecipePreviousValues
}

input CustomRecipeSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: CustomRecipeWhereInput
  AND: [CustomRecipeSubscriptionWhereInput!]
  OR: [CustomRecipeSubscriptionWhereInput!]
  NOT: [CustomRecipeSubscriptionWhereInput!]
}

input CustomRecipeUpdateInput {
  name: String
  user_id: String
  portions: Int
  user: UserUpdateOneRequiredWithoutCustom_recipesInput
  ingredient_list: IngredientListUpdateManyWithoutRecipeInput
}

input CustomRecipeUpdateManyDataInput {
  name: String
  user_id: String
  portions: Int
}

input CustomRecipeUpdateManyMutationInput {
  name: String
  user_id: String
  portions: Int
}

input CustomRecipeUpdateManyWithoutUserInput {
  create: [CustomRecipeCreateWithoutUserInput!]
  delete: [CustomRecipeWhereUniqueInput!]
  connect: [CustomRecipeWhereUniqueInput!]
  set: [CustomRecipeWhereUniqueInput!]
  disconnect: [CustomRecipeWhereUniqueInput!]
  update: [CustomRecipeUpdateWithWhereUniqueWithoutUserInput!]
  upsert: [CustomRecipeUpsertWithWhereUniqueWithoutUserInput!]
  deleteMany: [CustomRecipeScalarWhereInput!]
  updateMany: [CustomRecipeUpdateManyWithWhereNestedInput!]
}

input CustomRecipeUpdateManyWithWhereNestedInput {
  where: CustomRecipeScalarWhereInput!
  data: CustomRecipeUpdateManyDataInput!
}

input CustomRecipeUpdateOneRequiredWithoutIngredient_listInput {
  create: CustomRecipeCreateWithoutIngredient_listInput
  update: CustomRecipeUpdateWithoutIngredient_listDataInput
  upsert: CustomRecipeUpsertWithoutIngredient_listInput
  connect: CustomRecipeWhereUniqueInput
}

input CustomRecipeUpdateWithoutIngredient_listDataInput {
  name: String
  user_id: String
  portions: Int
  user: UserUpdateOneRequiredWithoutCustom_recipesInput
}

input CustomRecipeUpdateWithoutUserDataInput {
  name: String
  user_id: String
  portions: Int
  ingredient_list: IngredientListUpdateManyWithoutRecipeInput
}

input CustomRecipeUpdateWithWhereUniqueWithoutUserInput {
  where: CustomRecipeWhereUniqueInput!
  data: CustomRecipeUpdateWithoutUserDataInput!
}

input CustomRecipeUpsertWithoutIngredient_listInput {
  update: CustomRecipeUpdateWithoutIngredient_listDataInput!
  create: CustomRecipeCreateWithoutIngredient_listInput!
}

input CustomRecipeUpsertWithWhereUniqueWithoutUserInput {
  where: CustomRecipeWhereUniqueInput!
  update: CustomRecipeUpdateWithoutUserDataInput!
  create: CustomRecipeCreateWithoutUserInput!
}

input CustomRecipeWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  user_id: String
  user_id_not: String
  user_id_in: [String!]
  user_id_not_in: [String!]
  user_id_lt: String
  user_id_lte: String
  user_id_gt: String
  user_id_gte: String
  user_id_contains: String
  user_id_not_contains: String
  user_id_starts_with: String
  user_id_not_starts_with: String
  user_id_ends_with: String
  user_id_not_ends_with: String
  portions: Int
  portions_not: Int
  portions_in: [Int!]
  portions_not_in: [Int!]
  portions_lt: Int
  portions_lte: Int
  portions_gt: Int
  portions_gte: Int
  user: UserWhereInput
  ingredient_list_every: IngredientListWhereInput
  ingredient_list_some: IngredientListWhereInput
  ingredient_list_none: IngredientListWhereInput
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  AND: [CustomRecipeWhereInput!]
  OR: [CustomRecipeWhereInput!]
  NOT: [CustomRecipeWhereInput!]
}

input CustomRecipeWhereUniqueInput {
  id: ID
}

type DailyRecord {
  id: ID!
  user_id: String!
  date: String!
  current_weight: Int!
  calories: Int!
  fat: Int!
  carbs: Int!
  fiber: Int!
  protein: Int!
  food_string: String!
  user: User!
  updatedAt: DateTime!
  createdAt: DateTime!
}

type DailyRecordConnection {
  pageInfo: PageInfo!
  edges: [DailyRecordEdge]!
  aggregate: AggregateDailyRecord!
}

input DailyRecordCreateInput {
  id: ID
  user_id: String!
  date: String!
  current_weight: Int!
  calories: Int!
  fat: Int!
  carbs: Int!
  fiber: Int!
  protein: Int!
  food_string: String!
  user: UserCreateOneWithoutDaily_recordsInput!
}

input DailyRecordCreateManyWithoutUserInput {
  create: [DailyRecordCreateWithoutUserInput!]
  connect: [DailyRecordWhereUniqueInput!]
}

input DailyRecordCreateWithoutUserInput {
  id: ID
  user_id: String!
  date: String!
  current_weight: Int!
  calories: Int!
  fat: Int!
  carbs: Int!
  fiber: Int!
  protein: Int!
  food_string: String!
}

type DailyRecordEdge {
  node: DailyRecord!
  cursor: String!
}

enum DailyRecordOrderByInput {
  id_ASC
  id_DESC
  user_id_ASC
  user_id_DESC
  date_ASC
  date_DESC
  current_weight_ASC
  current_weight_DESC
  calories_ASC
  calories_DESC
  fat_ASC
  fat_DESC
  carbs_ASC
  carbs_DESC
  fiber_ASC
  fiber_DESC
  protein_ASC
  protein_DESC
  food_string_ASC
  food_string_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type DailyRecordPreviousValues {
  id: ID!
  user_id: String!
  date: String!
  current_weight: Int!
  calories: Int!
  fat: Int!
  carbs: Int!
  fiber: Int!
  protein: Int!
  food_string: String!
  updatedAt: DateTime!
  createdAt: DateTime!
}

input DailyRecordScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  user_id: String
  user_id_not: String
  user_id_in: [String!]
  user_id_not_in: [String!]
  user_id_lt: String
  user_id_lte: String
  user_id_gt: String
  user_id_gte: String
  user_id_contains: String
  user_id_not_contains: String
  user_id_starts_with: String
  user_id_not_starts_with: String
  user_id_ends_with: String
  user_id_not_ends_with: String
  date: String
  date_not: String
  date_in: [String!]
  date_not_in: [String!]
  date_lt: String
  date_lte: String
  date_gt: String
  date_gte: String
  date_contains: String
  date_not_contains: String
  date_starts_with: String
  date_not_starts_with: String
  date_ends_with: String
  date_not_ends_with: String
  current_weight: Int
  current_weight_not: Int
  current_weight_in: [Int!]
  current_weight_not_in: [Int!]
  current_weight_lt: Int
  current_weight_lte: Int
  current_weight_gt: Int
  current_weight_gte: Int
  calories: Int
  calories_not: Int
  calories_in: [Int!]
  calories_not_in: [Int!]
  calories_lt: Int
  calories_lte: Int
  calories_gt: Int
  calories_gte: Int
  fat: Int
  fat_not: Int
  fat_in: [Int!]
  fat_not_in: [Int!]
  fat_lt: Int
  fat_lte: Int
  fat_gt: Int
  fat_gte: Int
  carbs: Int
  carbs_not: Int
  carbs_in: [Int!]
  carbs_not_in: [Int!]
  carbs_lt: Int
  carbs_lte: Int
  carbs_gt: Int
  carbs_gte: Int
  fiber: Int
  fiber_not: Int
  fiber_in: [Int!]
  fiber_not_in: [Int!]
  fiber_lt: Int
  fiber_lte: Int
  fiber_gt: Int
  fiber_gte: Int
  protein: Int
  protein_not: Int
  protein_in: [Int!]
  protein_not_in: [Int!]
  protein_lt: Int
  protein_lte: Int
  protein_gt: Int
  protein_gte: Int
  food_string: String
  food_string_not: String
  food_string_in: [String!]
  food_string_not_in: [String!]
  food_string_lt: String
  food_string_lte: String
  food_string_gt: String
  food_string_gte: String
  food_string_contains: String
  food_string_not_contains: String
  food_string_starts_with: String
  food_string_not_starts_with: String
  food_string_ends_with: String
  food_string_not_ends_with: String
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  AND: [DailyRecordScalarWhereInput!]
  OR: [DailyRecordScalarWhereInput!]
  NOT: [DailyRecordScalarWhereInput!]
}

type DailyRecordSubscriptionPayload {
  mutation: MutationType!
  node: DailyRecord
  updatedFields: [String!]
  previousValues: DailyRecordPreviousValues
}

input DailyRecordSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: DailyRecordWhereInput
  AND: [DailyRecordSubscriptionWhereInput!]
  OR: [DailyRecordSubscriptionWhereInput!]
  NOT: [DailyRecordSubscriptionWhereInput!]
}

input DailyRecordUpdateInput {
  user_id: String
  date: String
  current_weight: Int
  calories: Int
  fat: Int
  carbs: Int
  fiber: Int
  protein: Int
  food_string: String
  user: UserUpdateOneRequiredWithoutDaily_recordsInput
}

input DailyRecordUpdateManyDataInput {
  user_id: String
  date: String
  current_weight: Int
  calories: Int
  fat: Int
  carbs: Int
  fiber: Int
  protein: Int
  food_string: String
}

input DailyRecordUpdateManyMutationInput {
  user_id: String
  date: String
  current_weight: Int
  calories: Int
  fat: Int
  carbs: Int
  fiber: Int
  protein: Int
  food_string: String
}

input DailyRecordUpdateManyWithoutUserInput {
  create: [DailyRecordCreateWithoutUserInput!]
  delete: [DailyRecordWhereUniqueInput!]
  connect: [DailyRecordWhereUniqueInput!]
  set: [DailyRecordWhereUniqueInput!]
  disconnect: [DailyRecordWhereUniqueInput!]
  update: [DailyRecordUpdateWithWhereUniqueWithoutUserInput!]
  upsert: [DailyRecordUpsertWithWhereUniqueWithoutUserInput!]
  deleteMany: [DailyRecordScalarWhereInput!]
  updateMany: [DailyRecordUpdateManyWithWhereNestedInput!]
}

input DailyRecordUpdateManyWithWhereNestedInput {
  where: DailyRecordScalarWhereInput!
  data: DailyRecordUpdateManyDataInput!
}

input DailyRecordUpdateWithoutUserDataInput {
  user_id: String
  date: String
  current_weight: Int
  calories: Int
  fat: Int
  carbs: Int
  fiber: Int
  protein: Int
  food_string: String
}

input DailyRecordUpdateWithWhereUniqueWithoutUserInput {
  where: DailyRecordWhereUniqueInput!
  data: DailyRecordUpdateWithoutUserDataInput!
}

input DailyRecordUpsertWithWhereUniqueWithoutUserInput {
  where: DailyRecordWhereUniqueInput!
  update: DailyRecordUpdateWithoutUserDataInput!
  create: DailyRecordCreateWithoutUserInput!
}

input DailyRecordWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  user_id: String
  user_id_not: String
  user_id_in: [String!]
  user_id_not_in: [String!]
  user_id_lt: String
  user_id_lte: String
  user_id_gt: String
  user_id_gte: String
  user_id_contains: String
  user_id_not_contains: String
  user_id_starts_with: String
  user_id_not_starts_with: String
  user_id_ends_with: String
  user_id_not_ends_with: String
  date: String
  date_not: String
  date_in: [String!]
  date_not_in: [String!]
  date_lt: String
  date_lte: String
  date_gt: String
  date_gte: String
  date_contains: String
  date_not_contains: String
  date_starts_with: String
  date_not_starts_with: String
  date_ends_with: String
  date_not_ends_with: String
  current_weight: Int
  current_weight_not: Int
  current_weight_in: [Int!]
  current_weight_not_in: [Int!]
  current_weight_lt: Int
  current_weight_lte: Int
  current_weight_gt: Int
  current_weight_gte: Int
  calories: Int
  calories_not: Int
  calories_in: [Int!]
  calories_not_in: [Int!]
  calories_lt: Int
  calories_lte: Int
  calories_gt: Int
  calories_gte: Int
  fat: Int
  fat_not: Int
  fat_in: [Int!]
  fat_not_in: [Int!]
  fat_lt: Int
  fat_lte: Int
  fat_gt: Int
  fat_gte: Int
  carbs: Int
  carbs_not: Int
  carbs_in: [Int!]
  carbs_not_in: [Int!]
  carbs_lt: Int
  carbs_lte: Int
  carbs_gt: Int
  carbs_gte: Int
  fiber: Int
  fiber_not: Int
  fiber_in: [Int!]
  fiber_not_in: [Int!]
  fiber_lt: Int
  fiber_lte: Int
  fiber_gt: Int
  fiber_gte: Int
  protein: Int
  protein_not: Int
  protein_in: [Int!]
  protein_not_in: [Int!]
  protein_lt: Int
  protein_lte: Int
  protein_gt: Int
  protein_gte: Int
  food_string: String
  food_string_not: String
  food_string_in: [String!]
  food_string_not_in: [String!]
  food_string_lt: String
  food_string_lte: String
  food_string_gt: String
  food_string_gte: String
  food_string_contains: String
  food_string_not_contains: String
  food_string_starts_with: String
  food_string_not_starts_with: String
  food_string_ends_with: String
  food_string_not_ends_with: String
  user: UserWhereInput
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  AND: [DailyRecordWhereInput!]
  OR: [DailyRecordWhereInput!]
  NOT: [DailyRecordWhereInput!]
}

input DailyRecordWhereUniqueInput {
  id: ID
}

scalar DateTime

type IngredientList {
  id: ID!
  user_id: String!
  recipe_id: String!
  ingredient_id: String!
  custom: Boolean!
  amount: Float!
  unit: String!
  recipe: CustomRecipe!
  user: User!
  updatedAt: DateTime!
  createdAt: DateTime!
}

type IngredientListConnection {
  pageInfo: PageInfo!
  edges: [IngredientListEdge]!
  aggregate: AggregateIngredientList!
}

input IngredientListCreateInput {
  id: ID
  user_id: String!
  recipe_id: String!
  ingredient_id: String!
  custom: Boolean!
  amount: Float!
  unit: String!
  recipe: CustomRecipeCreateOneWithoutIngredient_listInput!
  user: UserCreateOneWithoutIngredient_listInput!
}

input IngredientListCreateManyWithoutRecipeInput {
  create: [IngredientListCreateWithoutRecipeInput!]
  connect: [IngredientListWhereUniqueInput!]
}

input IngredientListCreateManyWithoutUserInput {
  create: [IngredientListCreateWithoutUserInput!]
  connect: [IngredientListWhereUniqueInput!]
}

input IngredientListCreateWithoutRecipeInput {
  id: ID
  user_id: String!
  recipe_id: String!
  ingredient_id: String!
  custom: Boolean!
  amount: Float!
  unit: String!
  user: UserCreateOneWithoutIngredient_listInput!
}

input IngredientListCreateWithoutUserInput {
  id: ID
  user_id: String!
  recipe_id: String!
  ingredient_id: String!
  custom: Boolean!
  amount: Float!
  unit: String!
  recipe: CustomRecipeCreateOneWithoutIngredient_listInput!
}

type IngredientListEdge {
  node: IngredientList!
  cursor: String!
}

enum IngredientListOrderByInput {
  id_ASC
  id_DESC
  user_id_ASC
  user_id_DESC
  recipe_id_ASC
  recipe_id_DESC
  ingredient_id_ASC
  ingredient_id_DESC
  custom_ASC
  custom_DESC
  amount_ASC
  amount_DESC
  unit_ASC
  unit_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type IngredientListPreviousValues {
  id: ID!
  user_id: String!
  recipe_id: String!
  ingredient_id: String!
  custom: Boolean!
  amount: Float!
  unit: String!
  updatedAt: DateTime!
  createdAt: DateTime!
}

input IngredientListScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  user_id: String
  user_id_not: String
  user_id_in: [String!]
  user_id_not_in: [String!]
  user_id_lt: String
  user_id_lte: String
  user_id_gt: String
  user_id_gte: String
  user_id_contains: String
  user_id_not_contains: String
  user_id_starts_with: String
  user_id_not_starts_with: String
  user_id_ends_with: String
  user_id_not_ends_with: String
  recipe_id: String
  recipe_id_not: String
  recipe_id_in: [String!]
  recipe_id_not_in: [String!]
  recipe_id_lt: String
  recipe_id_lte: String
  recipe_id_gt: String
  recipe_id_gte: String
  recipe_id_contains: String
  recipe_id_not_contains: String
  recipe_id_starts_with: String
  recipe_id_not_starts_with: String
  recipe_id_ends_with: String
  recipe_id_not_ends_with: String
  ingredient_id: String
  ingredient_id_not: String
  ingredient_id_in: [String!]
  ingredient_id_not_in: [String!]
  ingredient_id_lt: String
  ingredient_id_lte: String
  ingredient_id_gt: String
  ingredient_id_gte: String
  ingredient_id_contains: String
  ingredient_id_not_contains: String
  ingredient_id_starts_with: String
  ingredient_id_not_starts_with: String
  ingredient_id_ends_with: String
  ingredient_id_not_ends_with: String
  custom: Boolean
  custom_not: Boolean
  amount: Float
  amount_not: Float
  amount_in: [Float!]
  amount_not_in: [Float!]
  amount_lt: Float
  amount_lte: Float
  amount_gt: Float
  amount_gte: Float
  unit: String
  unit_not: String
  unit_in: [String!]
  unit_not_in: [String!]
  unit_lt: String
  unit_lte: String
  unit_gt: String
  unit_gte: String
  unit_contains: String
  unit_not_contains: String
  unit_starts_with: String
  unit_not_starts_with: String
  unit_ends_with: String
  unit_not_ends_with: String
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  AND: [IngredientListScalarWhereInput!]
  OR: [IngredientListScalarWhereInput!]
  NOT: [IngredientListScalarWhereInput!]
}

type IngredientListSubscriptionPayload {
  mutation: MutationType!
  node: IngredientList
  updatedFields: [String!]
  previousValues: IngredientListPreviousValues
}

input IngredientListSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: IngredientListWhereInput
  AND: [IngredientListSubscriptionWhereInput!]
  OR: [IngredientListSubscriptionWhereInput!]
  NOT: [IngredientListSubscriptionWhereInput!]
}

input IngredientListUpdateInput {
  user_id: String
  recipe_id: String
  ingredient_id: String
  custom: Boolean
  amount: Float
  unit: String
  recipe: CustomRecipeUpdateOneRequiredWithoutIngredient_listInput
  user: UserUpdateOneRequiredWithoutIngredient_listInput
}

input IngredientListUpdateManyDataInput {
  user_id: String
  recipe_id: String
  ingredient_id: String
  custom: Boolean
  amount: Float
  unit: String
}

input IngredientListUpdateManyMutationInput {
  user_id: String
  recipe_id: String
  ingredient_id: String
  custom: Boolean
  amount: Float
  unit: String
}

input IngredientListUpdateManyWithoutRecipeInput {
  create: [IngredientListCreateWithoutRecipeInput!]
  delete: [IngredientListWhereUniqueInput!]
  connect: [IngredientListWhereUniqueInput!]
  set: [IngredientListWhereUniqueInput!]
  disconnect: [IngredientListWhereUniqueInput!]
  update: [IngredientListUpdateWithWhereUniqueWithoutRecipeInput!]
  upsert: [IngredientListUpsertWithWhereUniqueWithoutRecipeInput!]
  deleteMany: [IngredientListScalarWhereInput!]
  updateMany: [IngredientListUpdateManyWithWhereNestedInput!]
}

input IngredientListUpdateManyWithoutUserInput {
  create: [IngredientListCreateWithoutUserInput!]
  delete: [IngredientListWhereUniqueInput!]
  connect: [IngredientListWhereUniqueInput!]
  set: [IngredientListWhereUniqueInput!]
  disconnect: [IngredientListWhereUniqueInput!]
  update: [IngredientListUpdateWithWhereUniqueWithoutUserInput!]
  upsert: [IngredientListUpsertWithWhereUniqueWithoutUserInput!]
  deleteMany: [IngredientListScalarWhereInput!]
  updateMany: [IngredientListUpdateManyWithWhereNestedInput!]
}

input IngredientListUpdateManyWithWhereNestedInput {
  where: IngredientListScalarWhereInput!
  data: IngredientListUpdateManyDataInput!
}

input IngredientListUpdateWithoutRecipeDataInput {
  user_id: String
  recipe_id: String
  ingredient_id: String
  custom: Boolean
  amount: Float
  unit: String
  user: UserUpdateOneRequiredWithoutIngredient_listInput
}

input IngredientListUpdateWithoutUserDataInput {
  user_id: String
  recipe_id: String
  ingredient_id: String
  custom: Boolean
  amount: Float
  unit: String
  recipe: CustomRecipeUpdateOneRequiredWithoutIngredient_listInput
}

input IngredientListUpdateWithWhereUniqueWithoutRecipeInput {
  where: IngredientListWhereUniqueInput!
  data: IngredientListUpdateWithoutRecipeDataInput!
}

input IngredientListUpdateWithWhereUniqueWithoutUserInput {
  where: IngredientListWhereUniqueInput!
  data: IngredientListUpdateWithoutUserDataInput!
}

input IngredientListUpsertWithWhereUniqueWithoutRecipeInput {
  where: IngredientListWhereUniqueInput!
  update: IngredientListUpdateWithoutRecipeDataInput!
  create: IngredientListCreateWithoutRecipeInput!
}

input IngredientListUpsertWithWhereUniqueWithoutUserInput {
  where: IngredientListWhereUniqueInput!
  update: IngredientListUpdateWithoutUserDataInput!
  create: IngredientListCreateWithoutUserInput!
}

input IngredientListWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  user_id: String
  user_id_not: String
  user_id_in: [String!]
  user_id_not_in: [String!]
  user_id_lt: String
  user_id_lte: String
  user_id_gt: String
  user_id_gte: String
  user_id_contains: String
  user_id_not_contains: String
  user_id_starts_with: String
  user_id_not_starts_with: String
  user_id_ends_with: String
  user_id_not_ends_with: String
  recipe_id: String
  recipe_id_not: String
  recipe_id_in: [String!]
  recipe_id_not_in: [String!]
  recipe_id_lt: String
  recipe_id_lte: String
  recipe_id_gt: String
  recipe_id_gte: String
  recipe_id_contains: String
  recipe_id_not_contains: String
  recipe_id_starts_with: String
  recipe_id_not_starts_with: String
  recipe_id_ends_with: String
  recipe_id_not_ends_with: String
  ingredient_id: String
  ingredient_id_not: String
  ingredient_id_in: [String!]
  ingredient_id_not_in: [String!]
  ingredient_id_lt: String
  ingredient_id_lte: String
  ingredient_id_gt: String
  ingredient_id_gte: String
  ingredient_id_contains: String
  ingredient_id_not_contains: String
  ingredient_id_starts_with: String
  ingredient_id_not_starts_with: String
  ingredient_id_ends_with: String
  ingredient_id_not_ends_with: String
  custom: Boolean
  custom_not: Boolean
  amount: Float
  amount_not: Float
  amount_in: [Float!]
  amount_not_in: [Float!]
  amount_lt: Float
  amount_lte: Float
  amount_gt: Float
  amount_gte: Float
  unit: String
  unit_not: String
  unit_in: [String!]
  unit_not_in: [String!]
  unit_lt: String
  unit_lte: String
  unit_gt: String
  unit_gte: String
  unit_contains: String
  unit_not_contains: String
  unit_starts_with: String
  unit_not_starts_with: String
  unit_ends_with: String
  unit_not_ends_with: String
  recipe: CustomRecipeWhereInput
  user: UserWhereInput
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  AND: [IngredientListWhereInput!]
  OR: [IngredientListWhereInput!]
  NOT: [IngredientListWhereInput!]
}

input IngredientListWhereUniqueInput {
  id: ID
}

scalar Long

type Mutation {
  createCustomIngredient(data: CustomIngredientCreateInput!): CustomIngredient!
  updateCustomIngredient(data: CustomIngredientUpdateInput!, where: CustomIngredientWhereUniqueInput!): CustomIngredient
  updateManyCustomIngredients(data: CustomIngredientUpdateManyMutationInput!, where: CustomIngredientWhereInput): BatchPayload!
  upsertCustomIngredient(where: CustomIngredientWhereUniqueInput!, create: CustomIngredientCreateInput!, update: CustomIngredientUpdateInput!): CustomIngredient!
  deleteCustomIngredient(where: CustomIngredientWhereUniqueInput!): CustomIngredient
  deleteManyCustomIngredients(where: CustomIngredientWhereInput): BatchPayload!
  createCustomRecipe(data: CustomRecipeCreateInput!): CustomRecipe!
  updateCustomRecipe(data: CustomRecipeUpdateInput!, where: CustomRecipeWhereUniqueInput!): CustomRecipe
  updateManyCustomRecipes(data: CustomRecipeUpdateManyMutationInput!, where: CustomRecipeWhereInput): BatchPayload!
  upsertCustomRecipe(where: CustomRecipeWhereUniqueInput!, create: CustomRecipeCreateInput!, update: CustomRecipeUpdateInput!): CustomRecipe!
  deleteCustomRecipe(where: CustomRecipeWhereUniqueInput!): CustomRecipe
  deleteManyCustomRecipes(where: CustomRecipeWhereInput): BatchPayload!
  createDailyRecord(data: DailyRecordCreateInput!): DailyRecord!
  updateDailyRecord(data: DailyRecordUpdateInput!, where: DailyRecordWhereUniqueInput!): DailyRecord
  updateManyDailyRecords(data: DailyRecordUpdateManyMutationInput!, where: DailyRecordWhereInput): BatchPayload!
  upsertDailyRecord(where: DailyRecordWhereUniqueInput!, create: DailyRecordCreateInput!, update: DailyRecordUpdateInput!): DailyRecord!
  deleteDailyRecord(where: DailyRecordWhereUniqueInput!): DailyRecord
  deleteManyDailyRecords(where: DailyRecordWhereInput): BatchPayload!
  createIngredientList(data: IngredientListCreateInput!): IngredientList!
  updateIngredientList(data: IngredientListUpdateInput!, where: IngredientListWhereUniqueInput!): IngredientList
  updateManyIngredientLists(data: IngredientListUpdateManyMutationInput!, where: IngredientListWhereInput): BatchPayload!
  upsertIngredientList(where: IngredientListWhereUniqueInput!, create: IngredientListCreateInput!, update: IngredientListUpdateInput!): IngredientList!
  deleteIngredientList(where: IngredientListWhereUniqueInput!): IngredientList
  deleteManyIngredientLists(where: IngredientListWhereInput): BatchPayload!
  createProfile(data: ProfileCreateInput!): Profile!
  updateProfile(data: ProfileUpdateInput!, where: ProfileWhereUniqueInput!): Profile
  updateManyProfiles(data: ProfileUpdateManyMutationInput!, where: ProfileWhereInput): BatchPayload!
  upsertProfile(where: ProfileWhereUniqueInput!, create: ProfileCreateInput!, update: ProfileUpdateInput!): Profile!
  deleteProfile(where: ProfileWhereUniqueInput!): Profile
  deleteManyProfiles(where: ProfileWhereInput): BatchPayload!
  createUser(data: UserCreateInput!): User!
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
  updateManyUsers(data: UserUpdateManyMutationInput!, where: UserWhereInput): BatchPayload!
  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!
  deleteUser(where: UserWhereUniqueInput!): User
  deleteManyUsers(where: UserWhereInput): BatchPayload!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

interface Node {
  id: ID!
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

type Profile {
  id: ID!
  user_id: String!
  age: Int!
  weight: Int!
  height: Int!
  gender: Boolean
  goal_weight: Int
  activity_level: Int
  diet: String
  fat: Int
  carbs: Int
  protein: Int
  fiber: Int
  calories: Int
  user: User!
  updatedAt: DateTime!
  createdAt: DateTime!
}

type ProfileConnection {
  pageInfo: PageInfo!
  edges: [ProfileEdge]!
  aggregate: AggregateProfile!
}

input ProfileCreateInput {
  id: ID
  user_id: String!
  age: Int!
  weight: Int!
  height: Int!
  gender: Boolean
  goal_weight: Int
  activity_level: Int
  diet: String
  fat: Int
  carbs: Int
  protein: Int
  fiber: Int
  calories: Int
  user: UserCreateOneWithoutProfileInput!
}

input ProfileCreateOneWithoutUserInput {
  create: ProfileCreateWithoutUserInput
  connect: ProfileWhereUniqueInput
}

input ProfileCreateWithoutUserInput {
  id: ID
  user_id: String!
  age: Int!
  weight: Int!
  height: Int!
  gender: Boolean
  goal_weight: Int
  activity_level: Int
  diet: String
  fat: Int
  carbs: Int
  protein: Int
  fiber: Int
  calories: Int
}

type ProfileEdge {
  node: Profile!
  cursor: String!
}

enum ProfileOrderByInput {
  id_ASC
  id_DESC
  user_id_ASC
  user_id_DESC
  age_ASC
  age_DESC
  weight_ASC
  weight_DESC
  height_ASC
  height_DESC
  gender_ASC
  gender_DESC
  goal_weight_ASC
  goal_weight_DESC
  activity_level_ASC
  activity_level_DESC
  diet_ASC
  diet_DESC
  fat_ASC
  fat_DESC
  carbs_ASC
  carbs_DESC
  protein_ASC
  protein_DESC
  fiber_ASC
  fiber_DESC
  calories_ASC
  calories_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type ProfilePreviousValues {
  id: ID!
  user_id: String!
  age: Int!
  weight: Int!
  height: Int!
  gender: Boolean
  goal_weight: Int
  activity_level: Int
  diet: String
  fat: Int
  carbs: Int
  protein: Int
  fiber: Int
  calories: Int
  updatedAt: DateTime!
  createdAt: DateTime!
}

type ProfileSubscriptionPayload {
  mutation: MutationType!
  node: Profile
  updatedFields: [String!]
  previousValues: ProfilePreviousValues
}

input ProfileSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ProfileWhereInput
  AND: [ProfileSubscriptionWhereInput!]
  OR: [ProfileSubscriptionWhereInput!]
  NOT: [ProfileSubscriptionWhereInput!]
}

input ProfileUpdateInput {
  user_id: String
  age: Int
  weight: Int
  height: Int
  gender: Boolean
  goal_weight: Int
  activity_level: Int
  diet: String
  fat: Int
  carbs: Int
  protein: Int
  fiber: Int
  calories: Int
  user: UserUpdateOneRequiredWithoutProfileInput
}

input ProfileUpdateManyMutationInput {
  user_id: String
  age: Int
  weight: Int
  height: Int
  gender: Boolean
  goal_weight: Int
  activity_level: Int
  diet: String
  fat: Int
  carbs: Int
  protein: Int
  fiber: Int
  calories: Int
}

input ProfileUpdateOneWithoutUserInput {
  create: ProfileCreateWithoutUserInput
  update: ProfileUpdateWithoutUserDataInput
  upsert: ProfileUpsertWithoutUserInput
  delete: Boolean
  disconnect: Boolean
  connect: ProfileWhereUniqueInput
}

input ProfileUpdateWithoutUserDataInput {
  user_id: String
  age: Int
  weight: Int
  height: Int
  gender: Boolean
  goal_weight: Int
  activity_level: Int
  diet: String
  fat: Int
  carbs: Int
  protein: Int
  fiber: Int
  calories: Int
}

input ProfileUpsertWithoutUserInput {
  update: ProfileUpdateWithoutUserDataInput!
  create: ProfileCreateWithoutUserInput!
}

input ProfileWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  user_id: String
  user_id_not: String
  user_id_in: [String!]
  user_id_not_in: [String!]
  user_id_lt: String
  user_id_lte: String
  user_id_gt: String
  user_id_gte: String
  user_id_contains: String
  user_id_not_contains: String
  user_id_starts_with: String
  user_id_not_starts_with: String
  user_id_ends_with: String
  user_id_not_ends_with: String
  age: Int
  age_not: Int
  age_in: [Int!]
  age_not_in: [Int!]
  age_lt: Int
  age_lte: Int
  age_gt: Int
  age_gte: Int
  weight: Int
  weight_not: Int
  weight_in: [Int!]
  weight_not_in: [Int!]
  weight_lt: Int
  weight_lte: Int
  weight_gt: Int
  weight_gte: Int
  height: Int
  height_not: Int
  height_in: [Int!]
  height_not_in: [Int!]
  height_lt: Int
  height_lte: Int
  height_gt: Int
  height_gte: Int
  gender: Boolean
  gender_not: Boolean
  goal_weight: Int
  goal_weight_not: Int
  goal_weight_in: [Int!]
  goal_weight_not_in: [Int!]
  goal_weight_lt: Int
  goal_weight_lte: Int
  goal_weight_gt: Int
  goal_weight_gte: Int
  activity_level: Int
  activity_level_not: Int
  activity_level_in: [Int!]
  activity_level_not_in: [Int!]
  activity_level_lt: Int
  activity_level_lte: Int
  activity_level_gt: Int
  activity_level_gte: Int
  diet: String
  diet_not: String
  diet_in: [String!]
  diet_not_in: [String!]
  diet_lt: String
  diet_lte: String
  diet_gt: String
  diet_gte: String
  diet_contains: String
  diet_not_contains: String
  diet_starts_with: String
  diet_not_starts_with: String
  diet_ends_with: String
  diet_not_ends_with: String
  fat: Int
  fat_not: Int
  fat_in: [Int!]
  fat_not_in: [Int!]
  fat_lt: Int
  fat_lte: Int
  fat_gt: Int
  fat_gte: Int
  carbs: Int
  carbs_not: Int
  carbs_in: [Int!]
  carbs_not_in: [Int!]
  carbs_lt: Int
  carbs_lte: Int
  carbs_gt: Int
  carbs_gte: Int
  protein: Int
  protein_not: Int
  protein_in: [Int!]
  protein_not_in: [Int!]
  protein_lt: Int
  protein_lte: Int
  protein_gt: Int
  protein_gte: Int
  fiber: Int
  fiber_not: Int
  fiber_in: [Int!]
  fiber_not_in: [Int!]
  fiber_lt: Int
  fiber_lte: Int
  fiber_gt: Int
  fiber_gte: Int
  calories: Int
  calories_not: Int
  calories_in: [Int!]
  calories_not_in: [Int!]
  calories_lt: Int
  calories_lte: Int
  calories_gt: Int
  calories_gte: Int
  user: UserWhereInput
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  AND: [ProfileWhereInput!]
  OR: [ProfileWhereInput!]
  NOT: [ProfileWhereInput!]
}

input ProfileWhereUniqueInput {
  id: ID
  user_id: String
}

type Query {
  customIngredient(where: CustomIngredientWhereUniqueInput!): CustomIngredient
  customIngredients(where: CustomIngredientWhereInput, orderBy: CustomIngredientOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [CustomIngredient]!
  customIngredientsConnection(where: CustomIngredientWhereInput, orderBy: CustomIngredientOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CustomIngredientConnection!
  customRecipe(where: CustomRecipeWhereUniqueInput!): CustomRecipe
  customRecipes(where: CustomRecipeWhereInput, orderBy: CustomRecipeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [CustomRecipe]!
  customRecipesConnection(where: CustomRecipeWhereInput, orderBy: CustomRecipeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CustomRecipeConnection!
  dailyRecord(where: DailyRecordWhereUniqueInput!): DailyRecord
  dailyRecords(where: DailyRecordWhereInput, orderBy: DailyRecordOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [DailyRecord]!
  dailyRecordsConnection(where: DailyRecordWhereInput, orderBy: DailyRecordOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): DailyRecordConnection!
  ingredientList(where: IngredientListWhereUniqueInput!): IngredientList
  ingredientLists(where: IngredientListWhereInput, orderBy: IngredientListOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [IngredientList]!
  ingredientListsConnection(where: IngredientListWhereInput, orderBy: IngredientListOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): IngredientListConnection!
  profile(where: ProfileWhereUniqueInput!): Profile
  profiles(where: ProfileWhereInput, orderBy: ProfileOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Profile]!
  profilesConnection(where: ProfileWhereInput, orderBy: ProfileOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ProfileConnection!
  user(where: UserWhereUniqueInput!): User
  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!
  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!
  node(id: ID!): Node
}

type Subscription {
  customIngredient(where: CustomIngredientSubscriptionWhereInput): CustomIngredientSubscriptionPayload
  customRecipe(where: CustomRecipeSubscriptionWhereInput): CustomRecipeSubscriptionPayload
  dailyRecord(where: DailyRecordSubscriptionWhereInput): DailyRecordSubscriptionPayload
  ingredientList(where: IngredientListSubscriptionWhereInput): IngredientListSubscriptionPayload
  profile(where: ProfileSubscriptionWhereInput): ProfileSubscriptionPayload
  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload
}

type User {
  id: ID!
  name: String!
  email: String!
  password: String!
  updatedAt: DateTime!
  createdAt: DateTime!
  profile: Profile
  daily_records(where: DailyRecordWhereInput, orderBy: DailyRecordOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [DailyRecord!]
  custom_recipes(where: CustomRecipeWhereInput, orderBy: CustomRecipeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [CustomRecipe!]
  custom_ingredients(where: CustomIngredientWhereInput, orderBy: CustomIngredientOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [CustomIngredient!]
  ingredient_list(where: IngredientListWhereInput, orderBy: IngredientListOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [IngredientList!]
}

type UserConnection {
  pageInfo: PageInfo!
  edges: [UserEdge]!
  aggregate: AggregateUser!
}

input UserCreateInput {
  id: ID
  name: String!
  email: String!
  password: String!
  profile: ProfileCreateOneWithoutUserInput
  daily_records: DailyRecordCreateManyWithoutUserInput
  custom_recipes: CustomRecipeCreateManyWithoutUserInput
  custom_ingredients: CustomIngredientCreateManyWithoutUserInput
  ingredient_list: IngredientListCreateManyWithoutUserInput
}

input UserCreateOneWithoutCustom_ingredientsInput {
  create: UserCreateWithoutCustom_ingredientsInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutCustom_recipesInput {
  create: UserCreateWithoutCustom_recipesInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutDaily_recordsInput {
  create: UserCreateWithoutDaily_recordsInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutIngredient_listInput {
  create: UserCreateWithoutIngredient_listInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutProfileInput {
  create: UserCreateWithoutProfileInput
  connect: UserWhereUniqueInput
}

input UserCreateWithoutCustom_ingredientsInput {
  id: ID
  name: String!
  email: String!
  password: String!
  profile: ProfileCreateOneWithoutUserInput
  daily_records: DailyRecordCreateManyWithoutUserInput
  custom_recipes: CustomRecipeCreateManyWithoutUserInput
  ingredient_list: IngredientListCreateManyWithoutUserInput
}

input UserCreateWithoutCustom_recipesInput {
  id: ID
  name: String!
  email: String!
  password: String!
  profile: ProfileCreateOneWithoutUserInput
  daily_records: DailyRecordCreateManyWithoutUserInput
  custom_ingredients: CustomIngredientCreateManyWithoutUserInput
  ingredient_list: IngredientListCreateManyWithoutUserInput
}

input UserCreateWithoutDaily_recordsInput {
  id: ID
  name: String!
  email: String!
  password: String!
  profile: ProfileCreateOneWithoutUserInput
  custom_recipes: CustomRecipeCreateManyWithoutUserInput
  custom_ingredients: CustomIngredientCreateManyWithoutUserInput
  ingredient_list: IngredientListCreateManyWithoutUserInput
}

input UserCreateWithoutIngredient_listInput {
  id: ID
  name: String!
  email: String!
  password: String!
  profile: ProfileCreateOneWithoutUserInput
  daily_records: DailyRecordCreateManyWithoutUserInput
  custom_recipes: CustomRecipeCreateManyWithoutUserInput
  custom_ingredients: CustomIngredientCreateManyWithoutUserInput
}

input UserCreateWithoutProfileInput {
  id: ID
  name: String!
  email: String!
  password: String!
  daily_records: DailyRecordCreateManyWithoutUserInput
  custom_recipes: CustomRecipeCreateManyWithoutUserInput
  custom_ingredients: CustomIngredientCreateManyWithoutUserInput
  ingredient_list: IngredientListCreateManyWithoutUserInput
}

type UserEdge {
  node: User!
  cursor: String!
}

enum UserOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  email_ASC
  email_DESC
  password_ASC
  password_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type UserPreviousValues {
  id: ID!
  name: String!
  email: String!
  password: String!
  updatedAt: DateTime!
  createdAt: DateTime!
}

type UserSubscriptionPayload {
  mutation: MutationType!
  node: User
  updatedFields: [String!]
  previousValues: UserPreviousValues
}

input UserSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: UserWhereInput
  AND: [UserSubscriptionWhereInput!]
  OR: [UserSubscriptionWhereInput!]
  NOT: [UserSubscriptionWhereInput!]
}

input UserUpdateInput {
  name: String
  email: String
  password: String
  profile: ProfileUpdateOneWithoutUserInput
  daily_records: DailyRecordUpdateManyWithoutUserInput
  custom_recipes: CustomRecipeUpdateManyWithoutUserInput
  custom_ingredients: CustomIngredientUpdateManyWithoutUserInput
  ingredient_list: IngredientListUpdateManyWithoutUserInput
}

input UserUpdateManyMutationInput {
  name: String
  email: String
  password: String
}

input UserUpdateOneRequiredWithoutCustom_ingredientsInput {
  create: UserCreateWithoutCustom_ingredientsInput
  update: UserUpdateWithoutCustom_ingredientsDataInput
  upsert: UserUpsertWithoutCustom_ingredientsInput
  connect: UserWhereUniqueInput
}

input UserUpdateOneRequiredWithoutCustom_recipesInput {
  create: UserCreateWithoutCustom_recipesInput
  update: UserUpdateWithoutCustom_recipesDataInput
  upsert: UserUpsertWithoutCustom_recipesInput
  connect: UserWhereUniqueInput
}

input UserUpdateOneRequiredWithoutDaily_recordsInput {
  create: UserCreateWithoutDaily_recordsInput
  update: UserUpdateWithoutDaily_recordsDataInput
  upsert: UserUpsertWithoutDaily_recordsInput
  connect: UserWhereUniqueInput
}

input UserUpdateOneRequiredWithoutIngredient_listInput {
  create: UserCreateWithoutIngredient_listInput
  update: UserUpdateWithoutIngredient_listDataInput
  upsert: UserUpsertWithoutIngredient_listInput
  connect: UserWhereUniqueInput
}

input UserUpdateOneRequiredWithoutProfileInput {
  create: UserCreateWithoutProfileInput
  update: UserUpdateWithoutProfileDataInput
  upsert: UserUpsertWithoutProfileInput
  connect: UserWhereUniqueInput
}

input UserUpdateWithoutCustom_ingredientsDataInput {
  name: String
  email: String
  password: String
  profile: ProfileUpdateOneWithoutUserInput
  daily_records: DailyRecordUpdateManyWithoutUserInput
  custom_recipes: CustomRecipeUpdateManyWithoutUserInput
  ingredient_list: IngredientListUpdateManyWithoutUserInput
}

input UserUpdateWithoutCustom_recipesDataInput {
  name: String
  email: String
  password: String
  profile: ProfileUpdateOneWithoutUserInput
  daily_records: DailyRecordUpdateManyWithoutUserInput
  custom_ingredients: CustomIngredientUpdateManyWithoutUserInput
  ingredient_list: IngredientListUpdateManyWithoutUserInput
}

input UserUpdateWithoutDaily_recordsDataInput {
  name: String
  email: String
  password: String
  profile: ProfileUpdateOneWithoutUserInput
  custom_recipes: CustomRecipeUpdateManyWithoutUserInput
  custom_ingredients: CustomIngredientUpdateManyWithoutUserInput
  ingredient_list: IngredientListUpdateManyWithoutUserInput
}

input UserUpdateWithoutIngredient_listDataInput {
  name: String
  email: String
  password: String
  profile: ProfileUpdateOneWithoutUserInput
  daily_records: DailyRecordUpdateManyWithoutUserInput
  custom_recipes: CustomRecipeUpdateManyWithoutUserInput
  custom_ingredients: CustomIngredientUpdateManyWithoutUserInput
}

input UserUpdateWithoutProfileDataInput {
  name: String
  email: String
  password: String
  daily_records: DailyRecordUpdateManyWithoutUserInput
  custom_recipes: CustomRecipeUpdateManyWithoutUserInput
  custom_ingredients: CustomIngredientUpdateManyWithoutUserInput
  ingredient_list: IngredientListUpdateManyWithoutUserInput
}

input UserUpsertWithoutCustom_ingredientsInput {
  update: UserUpdateWithoutCustom_ingredientsDataInput!
  create: UserCreateWithoutCustom_ingredientsInput!
}

input UserUpsertWithoutCustom_recipesInput {
  update: UserUpdateWithoutCustom_recipesDataInput!
  create: UserCreateWithoutCustom_recipesInput!
}

input UserUpsertWithoutDaily_recordsInput {
  update: UserUpdateWithoutDaily_recordsDataInput!
  create: UserCreateWithoutDaily_recordsInput!
}

input UserUpsertWithoutIngredient_listInput {
  update: UserUpdateWithoutIngredient_listDataInput!
  create: UserCreateWithoutIngredient_listInput!
}

input UserUpsertWithoutProfileInput {
  update: UserUpdateWithoutProfileDataInput!
  create: UserCreateWithoutProfileInput!
}

input UserWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  email: String
  email_not: String
  email_in: [String!]
  email_not_in: [String!]
  email_lt: String
  email_lte: String
  email_gt: String
  email_gte: String
  email_contains: String
  email_not_contains: String
  email_starts_with: String
  email_not_starts_with: String
  email_ends_with: String
  email_not_ends_with: String
  password: String
  password_not: String
  password_in: [String!]
  password_not_in: [String!]
  password_lt: String
  password_lte: String
  password_gt: String
  password_gte: String
  password_contains: String
  password_not_contains: String
  password_starts_with: String
  password_not_starts_with: String
  password_ends_with: String
  password_not_ends_with: String
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  profile: ProfileWhereInput
  daily_records_every: DailyRecordWhereInput
  daily_records_some: DailyRecordWhereInput
  daily_records_none: DailyRecordWhereInput
  custom_recipes_every: CustomRecipeWhereInput
  custom_recipes_some: CustomRecipeWhereInput
  custom_recipes_none: CustomRecipeWhereInput
  custom_ingredients_every: CustomIngredientWhereInput
  custom_ingredients_some: CustomIngredientWhereInput
  custom_ingredients_none: CustomIngredientWhereInput
  ingredient_list_every: IngredientListWhereInput
  ingredient_list_some: IngredientListWhereInput
  ingredient_list_none: IngredientListWhereInput
  AND: [UserWhereInput!]
  OR: [UserWhereInput!]
  NOT: [UserWhereInput!]
}

input UserWhereUniqueInput {
  id: ID
  email: String
}
`
      }
    