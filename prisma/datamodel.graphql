type User {
  id: ID! @unique @id
  name: String!
  email: String! @unique
  password: String!
  updatedAt: DateTime! @updatedAt
  createdAt: DateTime! @createdAt
  profile: Profile @relation(name: "ProfileToUser", onDelete: CASCADE)
  daily_records: [DailyRecord!]
    @relation(name: "DailyToUser", onDelete: CASCADE)
  custom_recipes: [CustomRecipe!]
    @relation(name: "RecipeToUser", onDelete: CASCADE)
  custom_ingredients: [CustomIngredient!]
    @relation(name: "IngredientToUser", onDelete: CASCADE)
  ingredient_list: [IngredientList!]
    @relation(name: "IngredientListToUser", onDelete: CASCADE)
  favorites: [FavoriteFood!]
    @relation(name: "FavoriteListToUser", onDelete: CASCADE)
  weight_logs: [WeightLog!] @relation(name: "WeightToUser", onDelete: CASCADE)
  posts: [Post!] @relation(name: "PostToUser", onDelete: CASCADE)
  comments: [Comment!] @relation(name: "CommentToUser", onDelete: CASCADE)
}

type Profile {
  id: ID! @unique @id
  user_id: String! @unique
  age: Int!
  weight: Int!
  height: Int!
  gender: Boolean
  goal_weight: Int
  activity_level: Int
  diet: String
  fat: Int
  carbs: Int
  protein: Int
  fiber: Int
  calories: Int
  user: User! @relation(link: INLINE, name: "ProfileToUser", onDelete: SET_NULL)
  updatedAt: DateTime! @updatedAt
  createdAt: DateTime! @createdAt
}

type DailyRecord {
  id: ID! @unique @id
  user_id: String!
  date: String!
  calories: Int!
  fat: Int!
  carbs: Int!
  fiber: Int!
  protein: Int!
  food_string: String!
  meal_type: String!
  user: User! @relation(link: INLINE, name: "DailyToUser", onDelete: SET_NULL)
  updatedAt: DateTime! @updatedAt
  createdAt: DateTime! @createdAt
}

type CustomRecipe {
  id: ID! @unique @id
  name: String!
  user_id: String!
  portions: Int!
  user: User! @relation(link: INLINE, name: "RecipeToUser", onDelete: SET_NULL)
  ingredient_list: [IngredientList!]
    @relation(name: "IngredientListToRecipe", onDelete: CASCADE)
  updatedAt: DateTime! @updatedAt
  createdAt: DateTime! @createdAt
}

type CustomIngredient {
  id: ID! @unique @id
  user_id: String!
  name: String!
  description: String!
  fat: Int!
  carbs: Int!
  protein: Int!
  fiber: Int!
  calories: Int!
  user: User!
    @relation(link: INLINE, name: "IngredientToUser", onDelete: SET_NULL)
  updatedAt: DateTime! @updatedAt
  createdAt: DateTime! @createdAt
}

type IngredientList {
  id: ID! @unique @id
  user_id: String!
  recipe_id: String!
  ingredient_id: String!
  custom: Boolean!
  amount: Float!
  unit: String!
  recipe: CustomRecipe!
    @relation(link: INLINE, name: "IngredientListToRecipe", onDelete: SET_NULL)
  user: User!
    @relation(link: INLINE, name: "IngredientListToUser", onDelete: SET_NULL)
  updatedAt: DateTime! @updatedAt
  createdAt: DateTime! @createdAt
}

type FavoriteFood {
  id: ID! @unique @id
  food_id: String!
  custom: Boolean!
  user_id: String!
  user: User!
    @relation(link: INLINE, name: "FavoriteListToUser", onDelete: SET_NULL)
  updatedAt: DateTime! @updatedAt
  createdAt: DateTime! @createdAt
}

type WeightLog {
  id: ID! @unique @id
  date: String!
  user_id: String!
  current_weight: Int!
  user: User! @relation(link: INLINE, name: "WeightToUser", onDelete: SET_NULL)
  updatedAt: DateTime! @updatedAt
  createdAt: DateTime! @createdAt
}

type Post {
  id: ID! @unique @id
  user: User! @relation(link: INLINE, name: "PostToUser", onDelete: SET_NULL)
  user_id: String!
  viewCount: Int
  likeCount: Int
  title: String!
  body: String!
  comments: [Comment!] @relation(name: "CommentToPost", onDelete: CASCADE)
  updatedAt: DateTime! @updatedAt
  createdAt: DateTime! @createdAt
}

type Comment {
  id: ID! @unique @id
  user: User! @relation(link: INLINE, name: "CommentToUser", onDelete: SET_NULL)
  user_id: String!
  post: Post! @relation(link: INLINE, name: "CommentToPost", onDelete: SET_NULL)
  post_id: String!
  likeCount: Int
  body: String!
  updatedAt: DateTime! @updatedAt
  createdAt: DateTime! @createdAt
}
